# -*- coding: utf-8 -*-
"""PA_Ques3_9Sep.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DJVKM9xMU472z7oZSHUDzUpMmjT53DI2
"""

import numpy as np
import pandas as pd

# Ques-3
# Part (a)
sr = pd.Series(['Madhuri','AjaySh@rma', 'R@ni', 'Radha',np.nan,'Smita','3567'])

sr.str.len()

sr.str.replace("@","a")

sr.str.count('a')

sr.str.swapcase()

sr.str.findall('adh')

sr.str.endswith('i')

# Ques-3
# Part (b)
df = pd.DataFrame(np.random.randint(0,100,size=(7, 7)))

df

# Compute the correlation of each rowwith the preceding row.
for i in range(1,7):
    print(df[i].corr(df[i-1]))

x.argmin()

x.reshape(10,10)

x.reshape(10,10)-np.diag(np.diag(x.reshape(10,10)))+np.eye(10)



# -*- coding: utf-8 -*-
"""PA_Ques4_9Sep.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L03fshorEOWUGlM2UTr0ht6JKcrZSr3S

Q4 Using the data frame EXERCISE provided in Q2 , attempt the following
questions
a) What is a map function? Use map function to convert all values in the
‘Diet’ attribute to uppercase.
b) Assuming the data is stored in a csv file “Exercise.csv”, give appropriate
commands to read this file, indexed on ‘Name’ and ‘Diet’ into a dataframe
named EXERCISE. Modify this command to read only the first 5 rows of
the file. If the file contains millions of records then give the command to
read the file in small pieces of uniform size.
c) Differentiate between qcut and cut methods. Use the appropriate method to
create 4 bins on the ‘Pulse’ attribute. Store the corresponding bin value of
‘Pulse’ attribute as a new attribute ‘Pbin’ in the original DataFrame.
Display the count of values of each bin.
"""

import pandas as pd

df=pd.read_csv('database.csv',skipinitialspace=True)
df

"""### a)
What is a map function? Use map function to convert all values in the
‘Diet’ attribute to uppercase.
"""

def upper_case(x):
    return x.upper()

df['Diet'].map(upper_case)

"""### b
b) Assuming the data is stored in a csv file “Exercise.csv”, give appropriate
commands to read this file, indexed on ‘Name’ and ‘Diet’ into a dataframe
named EXERCISE. Modify this command to read only the first 5 rows of
the file. If the file contains millions of records then give the command to
read the file in small pieces of uniform size.

"""

df=pd.read_csv('database.csv',skipinitialspace=True,index_col=["Name",'Diet'])
df

df.head()

size=10# specific the size to use
chunker=pd.read_csv('database.csv',skipinitialspace=True,index_col=["Name",'Diet'],chunksize=size)

"""### C
Differentiate between qcut and cut methods. Use the appropriate method to
create 4 bins on the ‘Pulse’ attribute. Store the corresponding bin value of
‘Pulse’ attribute as a new attribute ‘Pbin’ in the original DataFrame.
Display the count of values of each bin.
"""

#pd.cut(,4)
df=pd.read_csv('database.csv',skipinitialspace=True)
Pbin=pd.cut(df["Pulse"],4)
Pbin

pd.value_counts(Pbin)